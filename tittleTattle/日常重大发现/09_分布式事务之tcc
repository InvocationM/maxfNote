tcc： try-confirm-cancle

本质上是一个和业务高度耦合的二阶段协议。

所有的事务都要实现 try，confirm ，cancle接口
有一个事务协调器。

第一步，事务协调器 对每个子系统发起try请求，进行资源的预留。此时并没有真正的进行业务操作。
第二步，事务协调器 对第一步执行的结果进行判定，假如预留的资源不够，则执行cancle方法进行业务的回滚。主要要保证cancle方法的幂等性，（可能因为网络问题调用失败，需要进行重试）
第三步，假如所有的try执行都ok，则调用所有的confirm方法（不做资源检查，直接进行业务操作）。
第四步，假如所有的confirm方法都执行成功，则分布式事务完成。
第五步：假如confirm方法执行失败，则不断进行重试，假如重试一段时间后，还是失败的话，则进行事务补偿。
