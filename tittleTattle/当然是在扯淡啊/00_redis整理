redis整理：
    用c写的，key-value数据库。 value提供了多种数据结构，string。hash. list. set . sortset
    这些数据结构都支持pop/push， add/remove以及交集并集等复杂操作。并且这些操作都是原子性的。
    redis会周期性的将数据写入磁盘，或者把修改操作写入追加的记录文件，并在此基础上实现master-slave同步。


1， redis的内存淘汰策略
    当redis大到一定程度的时候，就会实施数据淘汰策略。（redis有六种）
    前三种是从设置了过期时间的数据集中，淘汰掉 使用次数最少的，将要过期的，任意
    中间两种是 从所有数据集中 淘汰使用最少的 任意
    最后一种是 禁止淘汰

2， redis如何解决并发？
    redis为单线程单进程模式。采用队列模式将并行访问变为串行访问。
    一客户端的角度： 为了保证和redis正常有序的通信，可以将连接jedis池化。同时对redis进行操作的时候采用锁synchronized
    二：服务器的角度： 采用setnx命令

3， redis的内存回收算法
    LRU算法（就是最近最久回收算法）， 回收最久没有使用的数据集
    标记清除算法

4， redis的集群方式
    1，主从复制：master以非阻塞的方式来提供服务。 slaves也以非阻塞的方式来完成数据同步。主机会自动将数据同步到副机 ，可以进行读写分离。
    缺点：redis不具备自动容错和恢复功能。主机宕机后部分数据未能即时同步的，会出现数据不一致的问题。
    redis的主从复制是全量复制。占内存。
    2，哨兵模式：有一个进程Sentinel（哨兵）用于监控master服务器的状态， 当master出现问题的时候，可以进行master和slave的切换。保证系统的高可用。
    监控，提醒，自动 故障迁移。
    优点：是主从复制的升级版，拥有它所有的优点，故障可以迁移，可用性更好，系统更健壮。
    缺点：较难支持在线扩容。 配置复杂
    3，cluster集群（分布式集群，切片技术将不同的key放置到不同的redis节点上）：所有节点俩俩相通。
    ping-pong检测节点是否失效。超过半数的节点检测失效就失效了。

5， redis的内存模型。
    info memory 命令可以看到redis各种内存区域的大小。
    redis是键值对数据库。每一个键值对都是一个 dictEntry，里面有三个指针，分别指向，键，值，以及下一个dictEntry。
    简单动态字符串（SDS）。
    key是以sds形式存储的。value是以redisObject形式存储。且redisObject有字段type（val的类型），ptr指向对象所在的地址。
    redis支持五种数据结构，每种都至少两种编码方式。好处是接口实现分离，不同场景的切换。

6， redis持久化： 将数据保存在硬盘中的方式，保证数据不会因为进程退出而丢失。
    两种持久化方式：RDB,AOF.
    web服务器的高可用是多长时间内能够提供正常服务。一般都是（99.9%、99.99%、99.999% 等等）。
    而redis的高可用则是 主从复制，快速容灾技术，数据的扩容，数据安全不丢失。
    RDB持久化是，将当前进程中的数据生成快照，保存在硬盘中。文件的后缀名是.rdb。 redis重新启动后，可以读取快照文件恢复数据。
    rdb持久化又分为两位触发方式：手动触发，自动触发。 bgsave命令 和 save m  n  。
    还有主从复制场景下，如果从节点执行全部复制操作，  执行shutdown命令时候
    AOF是将redis每次的命令记录写到日志文件，类似于mysql的binlog。redis重启的时候，再次执行日志文件中的命令来恢复数据。

7,  redis通信协议  resp
    是redis客户端和服务端之间的一种通信协议。
    特点是： 实现简单，快速解析

8， 什么是缓存雪崩？
    当服务器重启，或者大量缓存过期时间一致，这样在失效的时候，就会对后端服务器造成很大的压力。
    如何避免？ 不用的key设置不用的过期时间，让缓存失效的时间尽可能的一致。 做二级缓存，一级时间设置短点，二级设置长点。
    在缓存失效后，通过加锁或者任务队列来控制读数据库写缓存的线程数量。

9， 常见题目

hash类型，底层是ziplist或者hashtable。 当field-value小于512的时候，就是压缩表ziplist。





